{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q1. Energy needed to heat water from an initial temperature to a final temperature"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Input the weight of water being heated: 2.8\n",
      "Input the initial temperature: 12.5\n",
      "Input the desired final temperature: 30\n",
      "You need 205016.0 joules to heat up the water from 12.5 degrees celcius to 30.0 degrees celcius\n"
     ]
    }
   ],
   "source": [
    "# 1. the program will calculate the energy needed to heat water from an initial temperature to a final temperature\n",
    "# 2. User inputs weight\n",
    "weight = float(input(\"Input the weight of water being heated: \"))\n",
    "# 3. User inputs initial temperature\n",
    "itemp = float(input(\"Input the initial temperature: \"))\n",
    "# 4. User inputs desired final temperature\n",
    "ftemp = float(input(\"Input the desired final temperature: \"))\n",
    "# 5. Calculation for energy needed to heat up water\n",
    "energy = weight * (ftemp - itemp) * 4184\n",
    "# 6. Print energy needed to heat up water\n",
    "print(\"You need\", energy, \"joules to heat up the water from\", itemp, \"degrees celcius to\", ftemp, \"degrees celcius\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q2. BMI calculations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Input your height: 64.5\n",
      "Input your weight: 171\n",
      "Your height is  64.5\n",
      "Your weight is  171.0\n",
      "Your BMI is 28.9\n",
      "You are overweight\n"
     ]
    }
   ],
   "source": [
    "# 1. The program will calculate the BMI of the user and determine if he/she is under weight, normal weight, overweight or obese\n",
    "# 2. User inputs height\n",
    "height = float(input(\"Input your height: \"))\n",
    "# 3. User inputs weight\n",
    "weight = float(input(\"Input your weight: \"))\n",
    "# 4. Calculation for BMI\n",
    "bmi = (703 * (weight / (height * height)))\n",
    "# 5. BMI printed accoring to height and weight\n",
    "print(\"Your height is \", height)\n",
    "print(\"Your weight is \", weight)\n",
    "print(\"Your BMI is\", round(bmi,2))\n",
    "# 6. BMI category printed: under weight, normal weight, overweight or obese\n",
    "if bmi < 18.5:\n",
    "    print(\"You are underweight\")\n",
    "elif 18.5 < bmi < 25:\n",
    "    print(\"You are normal weight\")\n",
    "elif 25 < bmi < 30:\n",
    "    print(\"You are overweight\")\n",
    "elif bmi > 30:\n",
    "    print(\"You are obese\")\n",
    "# 7. Results for height 64.5 and weight = 171"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q3. Calculating total price of item using price and sales tax"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Input the price: 46.5\n",
      "The cost of the clothing is  50.06\n"
     ]
    }
   ],
   "source": [
    "# Clothing costs less than $15 has a sales tax of 1.7% other wise it is 7.65\n",
    "# User inputs price and tax is determined\n",
    "price = float(input(\"Input the price: \"))\n",
    "if price < 15:\n",
    "    sales_tax = 0.017\n",
    "else:\n",
    "    sales_tax = 0.0765\n",
    "# Cost is displayed\n",
    "cost = price + (price * sales_tax)\n",
    "# Cost is displayed\n",
    "print(\"The cost of the clothing is \", round(cost,2))\n",
    "# Results for $46.5"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Q4. Students GPA for Presidents Scholarship"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter your seniority: junior\n",
      "Enter your GPA: 3.6\n",
      "You are eligible for the President's Scholarship\n"
     ]
    }
   ],
   "source": [
    "# 1. GPA and seniority are declared\n",
    "gpa = 0\n",
    "seniority = \" \"\n",
    "# 2. User inputs gpa and seniority\n",
    "seniority = input(\"Enter your seniority: \")\n",
    "gpa = float(input(\"Enter your GPA: \"))\n",
    "# 3. / 4. It is determined if the student is eligible for the scholarship and the sudent is informed after\n",
    "if gpa >= 3.3 and seniority == \"senior\":\n",
    "    print(\"You are eligible for the President's Scholarship\")\n",
    "elif gpa < 3.3 and seniority == \"senior\":\n",
    "    print(\"You are not eligible for the President's Scholarship\")\n",
    "elif gpa >= 3.6 and seniority == \"junior\":\n",
    "    print(\"You are eligible for the President's Scholarship\")\n",
    "elif gpa < 3.6 and seniority == \"junior\":\n",
    "    print(\"You are not eligible for the President's Scholarship\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
